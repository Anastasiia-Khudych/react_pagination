{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","props","total","perPage","currentPage","onPageChange","pageLinkCount","Math","ceil","pageLinkData","i","push","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","pageLink","active","page","items","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","totalItems","renderStart","renderEnd","renderedItems","slice","lastVisibleItem","id","value","onChange","event","target","htmlFor","renderedItem","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAACC,GAY1C,IAXA,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAe,GAGZC,EAAI,EAAGA,GAAKJ,EAAeI,IAClCD,EAAaE,KAAKD,GAGpB,IAAME,EAA8B,IAAhBR,EACdS,EAAaT,IAAgBK,EAAaA,EAAaK,OAAS,GAoBtE,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAUL,IAJhB,SAQE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA3BsB,WACvBP,GACHP,EAAaD,EAAc,IAoBzB,oBAWDK,EAAaW,KAAI,SAAAC,GAAQ,OACxB,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQlB,IAAgBiB,IAJ9B,SASE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WArDK,IAACI,KAqDgBF,KApD1BjB,GACXC,EAAakB,IA+CT,SAMGF,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUJ,IAJhB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA7DsB,WACvBN,GACHR,EAAaD,EAAc,IAsDzB,wBC5FR,IAAMoB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB8B,EAApB,KACMC,EAAaX,EAAMV,OAEnBsB,EAAcJ,GAAgB5B,EAAc,GAC5CiC,EAAYD,EAAcJ,EAC1BM,EAAgBd,EAAMe,MAAMH,EAAaC,GAE3CG,EAAkB,EAGpBA,EADEJ,EAAcJ,EAAe,EAAIG,EACjBA,EAEAC,EAAcJ,EAUlC,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCgC,EAAc,EAD/C,cACsDI,EADtD,eAC4EL,EAD5E,OAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOV,EACPW,SAtBiB,SAACC,GAC1B,IAAQF,EAAUE,EAAMC,OAAhBH,MAERT,GAAiBS,GACjBR,EAAe,IAaT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOiC,EACPhC,QAAS6B,EACT5B,YAAaA,EACbC,aAAc6B,IAGhB,6BACGI,EAAclB,KAAI,SAAA2B,GAAY,OAC7B,oBACE,UAAQ,OADV,SAIGA,GAFIA,YErEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b62cfa8b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const pageLinkCount = Math.ceil(total / perPage);\n  const pageLinkData = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= pageLinkCount; i++) {\n    pageLinkData.push(i);\n  }\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageLinkData[pageLinkData.length - 1];\n\n  const handlePageClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevButtonClick = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextButtonClick = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isFirstPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevButtonClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pageLinkData.map(pageLink => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === pageLink,\n            },\n          )}\n          key={pageLink}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageLink}`}\n            onClick={() => handlePageClick(pageLink)}\n          >\n            {pageLink}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isLastPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextButtonClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalItems = items.length;\n\n  const renderStart = itemsPerPage * (currentPage - 1);\n  const renderEnd = renderStart + itemsPerPage;\n  const renderedItems = items.slice(renderStart, renderEnd);\n\n  let lastVisibleItem = 0;\n\n  if (renderStart + itemsPerPage + 1 > totalItems) {\n    lastVisibleItem = totalItems;\n  } else {\n    lastVisibleItem = renderStart + itemsPerPage;\n  }\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${renderStart + 1} - ${lastVisibleItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {renderedItems.map(renderedItem => (\n          <li\n            data-cy=\"item\"\n            key={renderedItem}\n          >\n            {renderedItem}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}